# Development Environment for Shelly Manager
# This docker-compose.yml is for local development with hot-reload
# For production deployment, see the examples in README.md

services:
  api:
    build:
      context: .
      dockerfile: packages/api/Dockerfile
      target: development # Use development stage if available
    environment:
      HOST: "0.0.0.0"
      PORT: "8000"
      DEBUG: "true"
      SHELLY_CONFIG_FILE: "/app/config.json"
      PYTHONPATH: "/app/src:/app/src_core"
    volumes:
      - ./config.json:/app/config.json:ro
      - ./packages/api/src:/app/src:ro
      - ./packages/core/src:/app/src_core:ro
    command: >
      sh -lc 'uvicorn api.main:app --host ${HOST:-0.0.0.0} --port ${PORT:-8000}
      --reload --reload-dir /app/src --reload-dir /app/src_core --log-level info'
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s
    restart: unless-stopped

  web:
    build:
      context: packages/web
      dockerfile: Dockerfile
      target: development # Use development stage if available
    environment:
      - VITE_BASE_API_URL=http://localhost:8000
    volumes:
      - ./packages/web/src:/app/src:ro
      - ./packages/web/public:/app/public:ro
      - ./packages/web/package.json:/app/package.json:ro
      - ./packages/web/vite.config.ts:/app/vite.config.ts:ro
      - ./packages/web/tsconfig.json:/app/tsconfig.json:ro
    ports:
      - "5173:5173" # Vite dev server port
    depends_on:
      - api
    restart: unless-stopped

  # CLI development container (useful for testing CLI commands)
  cli:
    build:
      context: .
      dockerfile: packages/cli/Dockerfile
      target: development # Use development stage if available
    environment:
      SHELLY_CONFIG_FILE: "/app/config.json"
      PYTHONPATH: "/app/src:/app/src_core"
    volumes:
      - ./config.json:/app/config.json:ro
      - ./packages/cli/src:/app/src:ro
      - ./packages/core/src:/app/src_core:ro
    profiles:
      - cli # Optional service, start with: docker-compose --profile cli up
    command: tail -f /dev/null # Keep container running for interactive use
    restart: unless-stopped
