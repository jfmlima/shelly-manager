name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/jfmlima/shelly-manager

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Docker Images

            üê≥ **Available Docker Images:**
            - `${{ env.IMAGE_PREFIX }}/api:${{ github.ref_name }}`
            - `${{ env.IMAGE_PREFIX }}/cli:${{ github.ref_name }}`
            - `${{ env.IMAGE_PREFIX }}/web:${{ github.ref_name }}`

            ## Quick Start

            ```bash
            # Run API server
            docker run -p 8000:8000 ${{ env.IMAGE_PREFIX }}/api:${{ github.ref_name }}

            # Run CLI tool
            docker run --rm ${{ env.IMAGE_PREFIX }}/cli:${{ github.ref_name }} --help

            # Run Web UI
            docker run -p 8080:8080 ${{ env.IMAGE_PREFIX }}/web:${{ github.ref_name }}
            ```

            ## Changes

            See the commits since the previous release for detailed changes.
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}

  build-and-push-all:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        package:
          - name: api
            dockerfile: packages/api/Dockerfile
            context: .
          - name: cli
            dockerfile: packages/cli/Dockerfile
            context: .
          - name: web
            dockerfile: packages/web/Dockerfile
            context: packages/web

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}/${{ matrix.package.name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.package.context }}
          file: ${{ matrix.package.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
